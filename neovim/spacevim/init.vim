" Dark powered mode of SpaceVim, generated by SpaceVim automatically.
let g:spacevim_enable_debug = 1
let g:spacevim_realtime_leader_guide = 1
let g:spacevim_colorscheme = 'onedark'

call SpaceVim#layers#load('incsearch')
call SpaceVim#layers#load('lang#c')
call SpaceVim#layers#load('lang#elixir')
call SpaceVim#layers#load('lang#go')
call SpaceVim#layers#load('lang#haskell')
call SpaceVim#layers#load('lang#java')
call SpaceVim#layers#load('lang#javascript')
call SpaceVim#layers#load('lang#lua')
call SpaceVim#layers#load('lang#perl')
call SpaceVim#layers#load('lang#php')
call SpaceVim#layers#load('lang#python')
call SpaceVim#layers#load('lang#ruby')
call SpaceVim#layers#load('lang#rust')
call SpaceVim#layers#load('lang#swig')
call SpaceVim#layers#load('lang#tmux')
call SpaceVim#layers#load('lang#vim')
call SpaceVim#layers#load('lang#xml')
call SpaceVim#layers#load('shell')   
call SpaceVim#layers#load('tools#screensaver')
" Custom calls
call SpaceVim#layers#load('autocomplete')
call SpaceVim#layers#load('tags')

set nocompatible
set path+=**
set wildmenu
let g:spacevim_automatic_update = 1

let g:spacevim_custom_plugins = [
\ ['wakatime/vim-wakatime'],
\ ['junegunn/fzf.vim'],
\ ['keith/swift.vim'],
\ ['mitsuse/autocomplete-swift'],
\ ['tpope/vim-rails'],
\ ['neoclide/vim-jsx-improve'],
\ ['tpope/vim-commentary'],
\ ['christoomey/vim-system-copy'],
\ ['nelstrom/vim-textobj-rubyblock'],
\ ['posva/vim-vue'],
\ ['udalov/kotlin-vim'],
\ ]

set rtp+=/usr/local/opt/fzf

let g:spacevim_disabled_plugins = [
\ ]
let g:spacevim_enable_vimfiler_welcome = 1
let g:spacevim_enable_debug = 1
let g:deoplete#auto_complete_delay = 150
let g:deoplete#enable_at_startup = 1
let g:spacevim_enable_tabline_filetype_icon = 1
let g:spacevim_enable_os_fileformat_icon = 1
let g:spacevim_buffer_index_type = 1
let g:neomake_vim_enabled_makers = []
let g:spacevim_enable_ycm = 0

" Custom lets
let g:python_host_prog = '/usr/local/bin/python2'
let g:python3_host_prog = '/usr/local/bin/python3'
let g:loaded_python3_provider = 1
let g:jsx_ext_required = 0
let g:spacevim_filemanager = 'nerdtree'

if executable('vimlint')
    call add(g:neomake_vim_enabled_makers, 'vimlint') 
endif
if executable('vint')
    call add(g:neomake_vim_enabled_makers, 'vint') 
endif
if has('python3')
    let g:ctrlp_map = ''
    nnoremap <silent> <C-p> :Denite file_rec<CR>
endif
let g:clang2_placeholder_next = ''
let g:clang2_placeholder_prev = ''

augroup custom_config
    au!
    au VimEnter * call s:customMappings()
    au VimEnter * call s:customSettings()
augroup END
func s:customMappings()
    " Fuzzy File Finder
    nnoremap <C-p> :Files<CR>
    " gtags/ctags goto definition
    nnoremap gd <C-]>
    " Handy at times
    nnoremap ; :
    " vim-rails alternate command (model/rspec)
    nnoremap <C-k> :A<CR>
endf
func s:customSettings()
    set splitright
    set splitbelow
    set ts=2 sw=2 expandtab
    " set keymap=dvorak
endf
